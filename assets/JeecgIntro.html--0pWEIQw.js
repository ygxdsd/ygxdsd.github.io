import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o as c,c as l,d as r,a as n,f as s,w as u,b as a,e as o}from"./app-s3LKCCkT.js";const d="/assets/image-20240424090917393-z1R_xm6d.png",g="/assets/image-20240429214549938-7zIUZz2x.png",m="/assets/image-20240429214801479-z57BA2Qh.png",k="/assets/image-20240429214841509-SC7-0U71.png",b="/assets/image-20240429215042400-e2-jXmjI.png",v="/assets/image-20240429215928021-tJcSnac5.png",h="/assets/image-20240429222721360-MgV2oCEz.png",f="/assets/image-20240429224000794-oG1ysl9T.png",_="/assets/image-20240429224632050--bXOTVkT.png",j="/assets/image-20240429224859336--UlVfjPR.png",x="/assets/image-20240429225116387-MS4VneAT.png",y="/assets/image-20240429225334187-rjDF1Uk5.png",w="/assets/image-20240429225843839-TJ05p1vE.png",q="/assets/image-20240429225930061-tQ8GjYlW.png",z={},J=n("p",null,[n("code",null,"more"),a(" 关于作者对Jeecg框架的基础使用")],-1),A=n("h2",{id:"_1-jeecg框架的介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-jeecg框架的介绍","aria-hidden":"true"},"#"),a(" 1.Jeecg框架的介绍")],-1),V=n("p",null,[a("拥有强大的Online在线代码生成功能。基础的字典，定时任务，报表，在线设计图设置等等。作者使用的最多的就是"),n("strong",null,"一对一，一对多，报表功能"),a("。以下会一一介绍。")],-1),C=o('<h2 id="_2-框架的搭建" tabindex="-1"><a class="header-anchor" href="#_2-框架的搭建" aria-hidden="true">#</a> 2.框架的搭建</h2><p>在搭建之前需要安装以下的<strong>工具软件和版本号</strong></p><ul><li>ideaIU-2019.2.3.exe</li><li>jdk-8u191-windows-x64.exe</li><li>apache-maven-3.5.4.zip</li><li>redis64-3.0.501</li><li>mysql-5.7.26-winx64.zip、</li><li>node 版本要求<code>Node 14.18+ / 16+ 版本</code>以上，不再支持 Node 12 / 13 / 15。</li><li>pnpm</li></ul><p>安装好工具后，访问Github的Jeecg仓库，对前后端的源码进行下载。</p>',4),R=n("thead",null,[n("tr",null,[n("th",null,"仓库"),n("th",null,"前端源码 Vue3版"),n("th",null,"后端JAVA源码")])],-1),I=n("td",null,"Github",-1),B={href:"https://github.com/jeecgboot/jeecgboot-vue3",target:"_blank",rel:"noopener noreferrer"},S={href:"https://github.com/jeecgboot/jeecg-boot",target:"_blank",rel:"noopener noreferrer"},N=n("td",null,"码云",-1),G={href:"https://gitee.com/jeecg/jeecgboot-vue3",target:"_blank",rel:"noopener noreferrer"},L={href:"https://gitee.com/jeecg/jeecg-boot",target:"_blank",rel:"noopener noreferrer"},M=o(`<h4 id="_1-前端搭建命令" tabindex="-1"><a class="header-anchor" href="#_1-前端搭建命令" aria-hidden="true">#</a> 1.前端搭建命令</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 拉取代码
git clone https://gitee.com/jeecg/jeecgboot-vue3.git

# 安装依赖
pnpm install

# 运行项目
pnpm dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-后端搭建命令" tabindex="-1"><a class="header-anchor" href="#_2-后端搭建命令" aria-hidden="true">#</a> 2.后端搭建命令</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 拉取代码
git clone https://gitee.com/jeecg/jeecg-boot.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>完成搭建后的项目</strong>前后端分离</p><figure><img src="`+d+'" alt="JeecgBoot项目结构" tabindex="0" loading="lazy"><figcaption>JeecgBoot项目结构</figcaption></figure><h3 id="_1-jeecg-boot后端配置" tabindex="-1"><a class="header-anchor" href="#_1-jeecg-boot后端配置" aria-hidden="true">#</a> 1.Jeecg-Boot后端配置</h3><p>前后端源码下载完成后，可以对后端代码进行配置。分为以下三步。</p><ul><li><strong>初始化数据库数据</strong></li></ul><blockquote><p>执行Sql脚本： jeecg-boot/db/jeecgboot-mysql-5.7.sql 脚本作用：会自动创建库<code>jeecg-boot</code>, 并初始化数据 。</p><figure><img src="'+g+'" alt="执行sql文件" tabindex="0" loading="lazy"><figcaption>执行sql文件</figcaption></figure></blockquote><ul><li>修改项目中<strong>yml文件配置</strong>，配置<strong>mysql</strong>数据库和<strong>redis</strong>等</li></ul><blockquote><p>配置文件： jeecg-module-system/jeecg-system-start/src/main/resources/application-dev.yml</p><figure><img src="'+m+'" alt="配置数据库账号密码" tabindex="0" loading="lazy"><figcaption>配置数据库账号密码</figcaption></figure><p>PS：Redis默认安装是<strong>没有密码</strong>的，如果有密码需要在password上进行输入。<strong>默认端口也是6379</strong></p><figure><img src="'+k+'" alt="redis配置" tabindex="0" loading="lazy"><figcaption>redis配置</figcaption></figure></blockquote><ul><li><strong>启动项目</strong></li></ul><blockquote><p>以上配置完成后，找到类 <code>jeecg-system-start/src/main/java/org/jeecg/JeecgSystemApplication.java</code> 右键执行启动；</p><figure><img src="'+b+'" alt="启动jeecg-boot后端" tabindex="0" loading="lazy"><figcaption>启动jeecg-boot后端</figcaption></figure></blockquote><h3 id="_2-jeecg-boot前端配置" tabindex="-1"><a class="header-anchor" href="#_2-jeecg-boot前端配置" aria-hidden="true">#</a> 2.Jeecg-Boot前端配置</h3><p>注意：框架只支持node 版本要求<code>Node 14.18+ / 16+ 版本</code>以上，不再支持 Node 12 / 13 / 15。</p><p>可以使用cmd查看node.js的版本， node -v</p><figure><img src="'+v+'" alt="查看node版本" tabindex="0" loading="lazy"><figcaption>查看node版本</figcaption></figure><p>工具准备好后，准备下载<strong>项目依赖</strong>，这里使用的是<strong>vscode</strong>。</p><p><code> pnpm install</code>下载依赖</p><p><code>pnpm dev</code>启动项目</p><figure><img src="'+h+'" alt="依赖下载，启动项目" tabindex="0" loading="lazy"><figcaption>依赖下载，启动项目</figcaption></figure><figure><img src="'+f+'" alt="启动完成" tabindex="0" loading="lazy"><figcaption>启动完成</figcaption></figure><h3 id="_3-创建自定义模块" tabindex="-1"><a class="header-anchor" href="#_3-创建自定义模块" aria-hidden="true">#</a> 3.创建自定义模块</h3><p>项目进行二次开发，需要新建模块。创建模块主要分为步</p><h5 id="_1-在idea中-创建module-填入" tabindex="-1"><a class="header-anchor" href="#_1-在idea中-创建module-填入" aria-hidden="true">#</a> 1：在idea中，创建module，填入</h5><figure><img src="'+_+'" alt="image-20240429224632050" tabindex="0" loading="lazy"><figcaption>image-20240429224632050</figcaption></figure><figure><img src="'+j+`" alt="输入具体的module名" tabindex="0" loading="lazy"><figcaption>输入具体的module名</figcaption></figure><h5 id="_2-在创建的新模块中的pom文件中-添加jeecg-boot-base-core模块的依赖" tabindex="-1"><a class="header-anchor" href="#_2-在创建的新模块中的pom文件中-添加jeecg-boot-base-core模块的依赖" aria-hidden="true">#</a> 2：在创建的新模块中的pom文件中，添加<strong>jeecg-boot-base-core</strong>模块的依赖</h5><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.jeecgframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jeecg-boot-base-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+x+'" alt="添加依赖" tabindex="0" loading="lazy"><figcaption>添加依赖</figcaption></figure><h5 id="_3-在最外层的pom文件-加上添加的模块。就可以进行使用了" tabindex="-1"><a class="header-anchor" href="#_3-在最外层的pom文件-加上添加的模块。就可以进行使用了" aria-hidden="true">#</a> 3:在最外层的pom文件，加上添加的模块。就可以进行使用了</h5><figure><img src="'+y+`" alt="添加模块" tabindex="0" loading="lazy"><figcaption>添加模块</figcaption></figure><p>接下来就可以配合项目中的<strong>低代码开发功能</strong>进行生成代码到新建的模块。</p><h5 id="_4-新建controller文件夹以及votecontroller的class文件" tabindex="-1"><a class="header-anchor" href="#_4-新建controller文件夹以及votecontroller的class文件" aria-hidden="true">#</a> 4：新建controller文件夹以及VoteController的class文件</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>jeecg<span class="token punctuation">.</span>modules<span class="token punctuation">.</span>vote<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span>


<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">Api</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiOperation</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>jeecg<span class="token punctuation">.</span>common<span class="token punctuation">.</span>api<span class="token punctuation">.</span>vo<span class="token punctuation">.</span></span><span class="token class-name">Result</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>jeecg<span class="token punctuation">.</span>common<span class="token punctuation">.</span>aspect<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">AutoLog</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>jeecg<span class="token punctuation">.</span>common<span class="token punctuation">.</span>system<span class="token punctuation">.</span>base<span class="token punctuation">.</span>controller<span class="token punctuation">.</span></span><span class="token class-name">JeecgController</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags<span class="token operator">=</span><span class="token string">&quot;投票&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/vote&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VoteController</span>  <span class="token punctuation">{</span>
<span class="token comment">//    @Autowired</span>

    <span class="token annotation punctuation">@AutoLog</span><span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">&quot;投票1&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;toupiao1&quot;</span><span class="token punctuation">)</span>



<span class="token comment">//    extends JeecgController&lt;Object,&gt;</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/lookup&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>  <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token string">&quot;111111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-更改过滤器shero-正式环境必须关闭此项——开启的话是高危漏洞" tabindex="-1"><a class="header-anchor" href="#_5-更改过滤器shero-正式环境必须关闭此项——开启的话是高危漏洞" aria-hidden="true">#</a> 5:更改过滤器shero（正式环境必须关闭此项——开启的话是高危漏洞）</h5><p>在内部添加白名单</p><blockquote><p>jeecg-boot\\jeecg-boot-base\\jeecg-boot-base-core\\src\\main\\java\\org\\jeecg\\config\\shiro\\ShiroConfig.java</p></blockquote><figure><img src="`+w+'" alt="添加白名单" tabindex="0" loading="lazy"><figcaption>添加白名单</figcaption></figure><h5 id="_6-运行swagger-发现后台接口已经出现。-正式环境请关闭此项-生产环境为中高危漏洞" tabindex="-1"><a class="header-anchor" href="#_6-运行swagger-发现后台接口已经出现。-正式环境请关闭此项-生产环境为中高危漏洞" aria-hidden="true">#</a> 6：运行swagger，发现后台接口已经出现。（正式环境请关闭此项，生产环境为中高危漏洞）</h5><figure><img src="'+q+'" alt="通过swagger查看接口" tabindex="0" loading="lazy"><figcaption>通过swagger查看接口</figcaption></figure>',42);function T(U,E){const p=t("RouterLink"),e=t("ExternalLinkIcon");return c(),l("div",null,[J,r(" more "),A,V,n("p",null,[s(p,{to:"/blog/JeecgBootBasicsUse.html"},{default:u(()=>[a("Jeecg框架基础用法")]),_:1})]),C,n("table",null,[R,n("tbody",null,[n("tr",null,[I,n("td",null,[n("a",B,[a("jeecgboot-vue3"),s(e)])]),n("td",null,[n("a",S,[a("jeecg-boot"),s(e)])])]),n("tr",null,[N,n("td",null,[n("a",G,[a("jeecgboot-vue3"),s(e)])]),n("td",null,[n("a",L,[a("jeecg-boot"),s(e)])])])])]),M])}const Q=i(z,[["render",T],["__file","JeecgIntro.html.vue"]]);export{Q as default};
