import{_ as s}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as t,d as p,a as n,b as e,e as o}from"./app-xS5i7JKJ.js";const c={},l=n("hr",null,null,-1),u=n("p",null,[n("code",null,"more"),e(" 关于MybatisPlus的QueryWrapper定义查询条件的and()和or()方法连用问题")],-1),i=o(`<h3 id="使用and" tabindex="-1"><a class="header-anchor" href="#使用and" aria-hidden="true">#</a> 使用and</h3><p>当只想进行简单的条件链接时，只需将查询条件直接连写即可，拼装后的sql就是用and连接的</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 代码</span>
<span class="token comment">// 代码中，条件语句会自动添加and条件</span>
 <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">VisitActHandleLog</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> visitActHandleLogService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">VisitActHandleLog</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;from_app_type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;wx&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;zf_code&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;M106944&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用or" tabindex="-1"><a class="header-anchor" href="#使用or" aria-hidden="true">#</a> 使用Or</h3><p>条件之间需要用or进行连接，需要调用or()方法，拼装的sql条件就可用or连接</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 代码</span>
 <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">VisitActHandleLog</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> visitActHandleLogService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">VisitActHandleLog</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;from_app_type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;wx&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;zf_code&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;M106944&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="当or-和and-连用注意事项" tabindex="-1"><a class="header-anchor" href="#当or-和and-连用注意事项" aria-hidden="true">#</a> 当or()和and()连用注意事项</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SysUserEntity</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span> <span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;dept_id&quot;</span> <span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;dept_id&quot;</span> <span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SysUserEntity</span><span class="token punctuation">&gt;</span></span> sysUserEntities <span class="token operator">=</span> baseMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>sql语句代码</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sys_user <span class="token keyword">WHERE</span> <span class="token keyword">status</span><span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> dept_id<span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">or</span> dept_id<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>会出现一个问题，因为有or()的存在。当dept_id=5 成立的时候。就不会去判断status=1 and dept_id= 3。<strong>所以我们需要修改编写的</strong>queryWrapper语句改为一下代码<code>queryWrapper.eq(&quot;status&quot; , 1).and(qw-&gt;qw.eq(&quot;dept_id&quot; , 3).or().eq(&quot;dept_id&quot; , 5));</code></p><p>这样queryWrapper.eq(&quot;status&quot; , 1)就和后面or判断是独立关系了。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SysUserEntity</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span> <span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>qw<span class="token operator">-&gt;</span>qw<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;dept_id&quot;</span> <span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;dept_id&quot;</span> <span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SysUserEntity</span><span class="token punctuation">&gt;</span></span> sysUserEntities <span class="token operator">=</span> baseMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>sql语句代码</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sys_user <span class="token keyword">WHERE</span> <span class="token keyword">status</span><span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> <span class="token punctuation">(</span>dept_id<span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">or</span> dept_id<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,15);function r(k,d){return a(),t("div",null,[l,u,p(" more "),i])}const q=s(c,[["render",r],["__file","QueryWrapperAndOr.html.vue"]]);export{q as default};
