import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as e,d as t,a as n,b as o,e as p}from"./app-bbNYsfF-.js";const c="/assets/image-20230912105327622-WxfdoYJR.png",l={},i=n("p",null,[n("code",null,"more"),o(" Lombock的介绍和使用")],-1),u=p(`<h3 id="lombock介绍" tabindex="-1"><a class="header-anchor" href="#lombock介绍" aria-hidden="true">#</a> Lombock介绍</h3><p>Lombok 是一个 Java 库，它通过简单的注解，可以让开发者在不增加样板代码的情况下，自动为 Java 类生成构造器、getter、setter 等常见的方法。同时，它还提供了其他一些方便的注解，能够简化开发中的一些常见任务，比如日志记录、数据校验等。</p><h3 id="导入依赖" tabindex="-1"><a class="header-anchor" href="#导入依赖" aria-hidden="true">#</a> 导入依赖</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实体类的优化使用" tabindex="-1"><a class="header-anchor" href="#实体类的优化使用" aria-hidden="true">#</a> 实体类的优化使用</h3><blockquote><p>当使用了该插件，在实体类中。可以使用<code>@Data</code>来简化实体类的书写</p><p>自动生成默认的<code>toString()</code>、<code>equals()</code>、<code>hashCode()</code>和<code>getter/&gt; setter</code>方法。</p></blockquote><h3 id="开启日志" tabindex="-1"><a class="header-anchor" href="#开启日志" aria-hidden="true">#</a> 开启日志</h3><p>在yml文件中，配置开启。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">logging</span><span class="token punctuation">:</span>
  <span class="token key atrule">level</span><span class="token punctuation">:</span>
    <span class="token comment"># 日志类型</span>
    <span class="token key atrule">root</span><span class="token punctuation">:</span> info
    <span class="token comment"># 指定包生效</span>
    <span class="token key atrule">com.zyb.mapper.UserMapper</span><span class="token punctuation">:</span> trace
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以自定义开启日志</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExampleClass</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exampleMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;这是一个信息日志&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;这是一个警告日志&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;这是一个错误日志&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+c+'" alt="输出日志" tabindex="0" loading="lazy"><figcaption>输出日志</figcaption></figure>',12);function d(r,k){return s(),e("div",null,[i,t(" more "),u])}const g=a(l,[["render",d],["__file","Lombok.html.vue"]]);export{g as default};
